CREATE DATABASE STUMANAGE;
USE STUMANAGE;
CREATE TABLE `CLASS`(
	`IDCLASS` INT NOT NULL AUTO_INCREMENT,
	`CLASSNAME` VARCHAR(50) NOT NULL,
    `SCHOLASTIC` VARCHAR(50) NOT NULL,
    PRIMARY KEY (`IDCLASS`)
    );
CREATE TABLE `STUDENT`(
	`IDSTUDENT` INT NOT NULL AUTO_INCREMENT,
	`FIRSTNAME` VARCHAR(50) NOT NULL,
    `LASTNAME` VARCHAR(50) NOT NULL,
    `GENDER` VARCHAR(50) NOT NULL,
    `DOB` DATE NOT NULL,
    `ADDRESS` VARCHAR(50) NOT NULL,
    `PHONENUMBER` VARCHAR(50) NOT NULL,
    `EMAIL` VARCHAR(50) NOT NULL,
    `IDCLASS` INT,
    PRIMARY KEY (`IDSTUDENT`)
    );
CREATE TABLE `TRANSCRIPT`(
	`IDSTUDENT` INT NOT NULL ,
	`IDSUBJECT` INT NOT NULL ,
    `MARK` DOUBLE NOT NULL 
    );
CREATE TABLE `SUBJECT`(
	`IDSUBJECT` INT NOT NULL AUTO_INCREMENT,
	`SUBJECTNAME` VARCHAR(50) NOT NULL ,
    `NUMBEROFCREDITS` INT NOT NULL,
     PRIMARY KEY (`IDSUBJECT`)
    );
ALTER TABLE `STUDENT` ADD CONSTRAINT `FK_STUDENT` FOREIGN KEY (IDCLASS) REFERENCES `CLASS`(IDCLASS) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE `TRANSCRIPT` ADD CONSTRAINT `FK_TRANSCRIPT1` FOREIGN KEY (IDSTUDENT) REFERENCES `STUDENT`(IDSTUDENT) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE `TRANSCRIPT` ADD CONSTRAINT `FK_TRANSCRIPT2` FOREIGN KEY (IDSUBJECT) REFERENCES `SUBJECT`(IDSUBJECT) ON DELETE CASCADE ON UPDATE CASCADE;

INSERT INTO `CLASS` (CLASSNAME, SCHOLASTIC) VALUES ('CLASS1','2020-2021'),('CLASS2','2020-2021'),('CLASS3','2020-2021'),('CLASS4','2020-2021'),('CLASS5','2020-2021');
INSERT INTO `STUDENT` (FIRSTNAME, LASTNAME, GENDER, DOB, ADDRESS, PHONENUMBER,EMAIL, IDCLASS) VALUES ('FIRST1','LAST1','NAM','1999-09-15','HA NOI','0312456728','STU1@GMAIL.COM',1),
('FIRST2','LAST2','NU','1999-09-16','HA NOI','0312456727','STU2@GMAIL.COM',1),
('FIRST3','LAST3','NAM','1999-08-15','HA NOI','0312456726','STU3@GMAIL.COM',2),
('FIRST4','LAST4','NU','1999-08-16','HA NOI','0312456725','STU4@GMAIL.COM',2),
('FIRST5','LAST5','NAM','1999-07-15','HA NOI','0312456724','STU5@GMAIL.COM',3),
('FIRST6','LAST6','NU','1999-07-16','HA NOI','0312456723','STU6@GMAIL.COM',3),
('FIRST7','LAST7','NAM','1999-06-15','HA NOI','0312456722','STU7@GMAIL.COM',4),
('FIRST8','LAST8','NU','1999-06-16','HA NOI','0312456721','STU8@GMAIL.COM',4),
('FIRST9','LAST9','NAM','1999-05-15','HA NOI','0312456720','STU9@GMAIL.COM',5),
('FIRST10','LAST10','NAM','1999-05-18','HA NOI','0312456719','STU10@GMAIL.COM',5);
INSERT INTO `STUDENT` (FIRSTNAME, LASTNAME, GENDER, DOB, ADDRESS, PHONENUMBER,EMAIL, IDCLASS) VALUES('FIRST11','LAST11','NU','1999-04-18','HA NOI','0312456718','STU11@GMAIL.COM',1);
INSERT INTO `SUBJECT`(SUBJECTNAME,NUMBEROFCREDITS) VALUES ('SUBJECT1',1),('SUBJECT2',2),('SUBJECT3',3),('SUBJECT4',4),('SUBJECT5',3);
INSERT INTO `TRANSCRIPT`(IDSTUDENT,IDSUBJECT, MARK) VALUES (1,1,8.0),(2,1,7.0),(3,2,6.0),(4,2,7.5),(5,3,8.8),(6,3,9.0),(7,4,5.0),(8,4,3.0),(9,5,10.0),(10,5,9.5);
INSERT INTO `TRANSCRIPT`(IDSTUDENT,IDSUBJECT, MARK) VALUES(1,5,7.0);
INSERT INTO `TRANSCRIPT`(IDSTUDENT,IDSUBJECT, MARK) VALUES(11,1,7.5);
/*Q2*/
SELECT ST.IDSTUDENT, ST.FIRSTNAME, ST.LASTNAME, ST.DOB, ST.GENDER, CL.CLASSNAME
FROM `STUDENT` ST
LEFT JOIN `CLASS` CL ON
	ST.IDCLASS = CL.IDCLASS;
    
/*Q3?*/
WITH CTE1 AS(
    SELECT 		CR.IDCLASS, CR.CLASSNAME, GENDER,IDSTUDENT
    FROM		STUDENT AS S
                    RIGHT JOIN	CLASS AS CR
                                  ON			S.IDCLASS = CR.IDCLASS),
     CTE2 AS(
         SELECT 		CTE1.IDCLASS, CTE1.GENDER, CTE1.IDSTUDENT,COUNT(*) NUM_OF_MALE
         FROM		CTE1
         WHERE		CTE1.GENDER = "NAM"
         GROUP BY	CTE1.IDCLASS
     ),
     CTE3 AS(
         SELECT 		CTE1.IDCLASS, CTE1.GENDER, CTE1.IDSTUDENT,COUNT(*) NUM_OF_FEMALE
         FROM		CTE1
         WHERE		CTE1.GENDER = "NU"
         GROUP BY	CTE1.IDCLASS
     )
SELECT 		CTE1.IDCLASS, CTE1.CLASSNAME, COALESCE(CTE2.NUM_OF_MALE, 0) NUM_OF_MALE, COALESCE(CTE3.NUM_OF_FEMALE,0)NUM_OF_FEMALE
FROM 		CTE1
                LEFT JOIN	CTE2
                             ON			CTE1.IDCLASS = CTE2.IDCLASS
                LEFT JOIN	CTE3
                             ON			CTE1.IDCLASS = CTE3.IDCLASS
GROUP BY	CTE1.IDCLASS;

/*Q4*/
SELECT ST.IDSTUDENT, CL.CLASSNAME,SJ.SUBJECTNAME, TR.MARK
FROM `STUDENT` AS ST
LEFT JOIN `TRANSCRIPT`AS TR ON
	ST.IDSTUDENT = TR.IDSTUDENT
LEFT JOIN `CLASS` AS CL ON
	ST.IDCLASS= CL.IDCLASS
LEFT JOIN `SUBJECT` AS SJ ON
	TR.IDSUBJECT= SJ.IDSUBJECT
WHERE ST.IDSTUDENT =?;

/*Q5*/
SELECT CS.IDCLASS , COUNT(CS.IDCLASS)AS SO_LUONG_SINH_VIEN
FROM(
SELECT ST.IDSTUDENT, ST.GENDER, CL.CLASSNAME, CL.IDCLASS
FROM `STUDENT` ST
LEFT JOIN `CLASS` CL ON
	ST.IDCLASS = CL.IDCLASS) AS CS
GROUP BY CS.IDCLASS;

/*Q6*/
SELECT MA.IDSUBJECT,MA.SUBJECTNAME, MA.IDSTUDENT, MA.FIRSTNAME, MA.LASTNAME, MA.GENDER, MA.DOB, MIN(MA.MARK) AS MINOFMARK
FROM(SELECT ST.IDSTUDENT,ST.FIRSTNAME, ST.LASTNAME, ST.GENDER, ST.DOB ,SJ.IDSUBJECT,SJ.SUBJECTNAME, TR.MARK
FROM `STUDENT` AS ST
RIGHT JOIN `TRANSCRIPT`AS TR ON
	ST.IDSTUDENT = TR.IDSTUDENT
LEFT JOIN `SUBJECT` AS SJ ON
	TR.IDSUBJECT= SJ.IDSUBJECT)AS MA
GROUP BY MA.SUBJECTNAME;

/*Q7*/
DROP PROCEDURE IF EXISTS GET_MARK_OF_5MAX_STUDENT_FROM_IDSUBJECT;
DELIMITER //
CREATE PROCEDURE GET_MARK_OF_5MAX_STUDENT_FROM_IDSUBJECT (IN ID_SUBJECT INT)
  BEGIN
	SELECT MA.IDSUBJECT,MA.SUBJECTNAME, MA.IDSTUDENT, MA.FIRSTNAME, MA.LASTNAME, MA.GENDER, MA.DOB, MA.MARK
	FROM(SELECT ST.IDSTUDENT,ST.FIRSTNAME, ST.LASTNAME, ST.GENDER, ST.DOB ,SJ.IDSUBJECT,SJ.SUBJECTNAME, TR.MARK
		FROM `STUDENT` AS ST
		RIGHT JOIN `TRANSCRIPT`AS TR ON
			ST.IDSTUDENT = TR.IDSTUDENT
		LEFT JOIN `SUBJECT` AS SJ ON
			TR.IDSUBJECT= SJ.IDSUBJECT)AS MA
	WHERE MA.IDSUBJECT = ID_SUBJECT
	GROUP BY MA.MARK
	ORDER BY MA.MARK DESC LIMIT 5;
  END//
DELIMITER ;
CALL GET_MARK_OF_5MAX_STUDENT_FROM_IDSUBJECT(?);

/*Q8*/
DROP PROCEDURE IF EXISTS GET_AVG_MARK_OF_STUDENT;
DELIMITER //
CREATE PROCEDURE GET_AVG_MARK_OF_STUDENT (IN ID_STU INT)
  BEGIN
	SELECT  MA.IDSTUDENT, MA.FIRSTNAME, MA.LASTNAME, MA.GENDER, MA.DOB, AVG(MA.MARK) AS DIEMTB
	FROM(SELECT ST.IDSTUDENT,ST.FIRSTNAME, ST.LASTNAME, ST.GENDER, ST.DOB ,SJ.IDSUBJECT,SJ.SUBJECTNAME, TR.MARK
		FROM `STUDENT` AS ST
		RIGHT JOIN `TRANSCRIPT`AS TR ON
			ST.IDSTUDENT = TR.IDSTUDENT
		LEFT JOIN `SUBJECT` AS SJ ON
			TR.IDSUBJECT= SJ.IDSUBJECT)AS MA
	WHERE MA.IDSTUDENT = ID_STU;
  END//
DELIMITER ;
CALL GET_AVG_MARK_OF_STUDENT(?);

/*Q9*/
DROP FUNCTION IF EXISTS   SUM_TUITION;
DELIMITER //
CREATE FUNCTION SUM_TUITION ( ID_STU INT ) RETURNS INT
READS SQL DATA
DETERMINISTIC
  BEGIN
	DECLARE _TUITION INT DEFAULT NULL;
    SELECT SUM(CRST.NUMBEROFCREDITS)*500000 INTO _TUITION
	FROM
		(SELECT  MA.IDSTUDENT, MA.FIRSTNAME, MA.LASTNAME, MA.GENDER, MA.DOB, MA.SUBJECTNAME, MA.NUMBEROFCREDITS
		 FROM(SELECT ST.IDSTUDENT,ST.FIRSTNAME, ST.LASTNAME, ST.GENDER, ST.DOB ,SJ.IDSUBJECT,SJ.SUBJECTNAME,SJ.NUMBEROFCREDITS
			 FROM `STUDENT` AS ST
			 RIGHT JOIN `TRANSCRIPT`AS TR ON
				ST.IDSTUDENT = TR.IDSTUDENT
			 LEFT JOIN `SUBJECT` AS SJ ON
				TR.IDSUBJECT= SJ.IDSUBJECT)AS MA
		 WHERE MA.IDSTUDENT = ID_STU) CRST;
    RETURN _TUITION;
  END//
DELIMITER ;
SELECT IDSTUDENT, SUM_TUITION(IDSTUDENT) AS TONGHOCPHI_VND
FROM STUDENT
WHERE IDSTUDENT = ?;
